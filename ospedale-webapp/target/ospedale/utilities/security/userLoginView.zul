<?page title="Centuria" contentType="text/html;charset=UTF-8"?>
<?init class="org.zkoss.zkplus.databind.AnnotateDataBinderInit" root="./winUserLoginView"?>
<?variable-resolver class="org.zkoss.zkplus.spring.DelegatingVariableResolver"?>
<?component name="lookup" class="com.nzion.view.component.LookupBox"?>
<zk xmlns:h="http://www.w3.org/1999/xhtml" xmlns:a="http://www.zkoss.org/2005/zk/annotation"
    xmlns:n="http://www.zkoss.org/2005/zk/native" xmlns:w="http://www.zkoss.org/2005/zk/client">
    <zscript>
        <![CDATA[
        import java.util.regex.*;
        import com.nzion.domain.*;
        import com.nzion.util.*;
        import com.nzion.zkoss.dto.*;
	    import com.nzion.zkoss.composer.UserLoginController;
	    import com.nzion.service.common.CommonCrudService;
	    import com.nzion.security.SecurityGroup;
	    UserLoginController userLoginController = new UserLoginController();
	    String title = userLoginController.getUserLogin().getId() == null ? "New User Login" : userLoginController.getUserLogin().getUsername();
	    CommonCrudService commonCrudService = com.nzion.util.Infrastructure.getSpringBean("commonCrudService");
	    com.nzion.repository.common.CommonCrudRepository commonCrudRepository = com.nzion.util.Infrastructure.getSpringBean("commonCrudRepository");
	    List allLocations = commonCrudService.getAll(com.nzion.domain.Location.class);
	    List secPermiGroups = commonCrudService.getAll(SecurityGroup.class);
	    List emps = commonCrudService.getAll(com.nzion.domain.Employee.class);
	    com.nzion.zkoss.ext.EntityDropdownRenderer dropdownRenderer = new com.nzion.zkoss.ext.EntityDropdownRenderer(new com.nzion.zkoss.ext.EntityDropDownPersonNameAdapter());
	    List nurseStattionList  = commonCrudService.getAll(com.nzion.domain.inpatient.NurseStation.class);
	    Set nurseStations = com.nzion.util.UtilValidator.isNotEmpty(nurseStattionList)? new HashSet(nurseStattionList):Collections.emptySet();
	    Practice practice = commonCrudService.getAll(Practice.class) != null ? commonCrudService.getAll(Practice.class).get(0) : null;
		boolean isJoinINPack = PortalRestServiceConsumer.checkIfTenantIsSubscribedToJoinInPackage(practice.getTenantId());
		if(UtilValidator.isNotEmpty(allLocations.get(0)))
			userLoginController.addOrRemoveLocation((Location)allLocations.get(0), true);
]]>
    </zscript>
    <window apply="${userLoginController}" id="winUserLoginView" mode="embedded" zclass="boxStyle">
        <div sclass="boxStyle">
            <panel title="User Login">
                <panelchildren>
                    <div sclass="panelCont" if="${userLoginController.userLogin.id == null}">
                        <div>
                            <div>
                                <label value="User Name" />
                                <label value="*" style="color:red" />
                            </div>
                            <textbox id="txtUserName" value="@{userLoginController.userLogin.username}" w:showError_="function(mesg){displayError(this,mesg);}" w:clearErrorMessage="function(revalidate, remainError){clearErrorMessage(remainError,this);}">
                                <attribute name="onBlur">
                                    <![CDATA[
                                        boolean result = validateUserName(self.getValue());
                                        if(result)
                                            saveUserLogin.setDisabled(false);
                                        else
                                            saveUserLogin.setDisabled(true);

                                    ]]>
                                </attribute>
                            </textbox>
                        </div>
                        <zscript>
                            <![CDATA[
                            boolean validateUserName(String value){
                                Pattern ptr = Pattern.compile("(?:(?:\\r\\n)?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*\\<(?:(?:\\r\\n)?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*(?:,@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*)*:(?:(?:\\r\\n)?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*\\>(?:(?:\\r\\n)?[ \\t])*)|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*:(?:(?:\\r\\n)?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*\\<(?:(?:\\r\\n)?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*(?:,@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*)*:(?:(?:\\r\\n)?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*\\>(?:(?:\\r\\n)?[ \\t])*)(?:,\\s*(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*\\<(?:(?:\\r\\n)?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*(?:,@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*)*:(?:(?:\\r\\n)?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*\\>(?:(?:\\r\\n)?[ \\t])*))*)?;\\s*)");
                                Pattern numPtr = Pattern.compile("^[0-9]{8,8}$");
                                if(!ptr.matcher(value).matches() && !numPtr.matcher(value).matches()){
                                    com.nzion.util.UtilMessagesAndPopups.showError("Allowed valid email or 8 digit mobile number");
                                    return false;
                                } else{
                                    return true;
                                }
                            }
                            ]]>
                        </zscript>
                        <div>
                            <div>
                                <label value="Employee"/>
                                <label value="*" style="color:red" />
                            </div>
                            <combobox constraint="no empty:Employee Required"  w:showError_="function(mesg){displayError(this,mesg);}" w:clearErrorMessage="function(revalidate, remainError){clearErrorMessage(remainError,this);}"
                                      onBlur="enableDisableProviderRole((com.nzion.domain.Employee)self.getSelectedItem().getValue());" readonly="true"
                                      model="@{emps}"
                                      selectedItem="@{userLoginController.userLogin.person}"
                                      itemRenderer="${dropdownRenderer}">
                            </combobox>
                        </div>
                    </div>
                    <div unless="${userLoginController.userLogin.id == null}">
                        <div style="margin-left:5px;margin-top:10px">
                            <label value="User Name:" style="font-weight:bold;font-size:14px"/>
                            <label value="@{userLoginController.userLogin.username}" style="font-size:14px"/>
                            <label value="Person Name:" style="font-weight:bold;font-size:14px;margin-left:10px"/>
                            <label value="@{userLoginController.userLogin.person.firstName}" style="font-size:14px"/>
                            <label value="@{userLoginController.userLogin.person.lastName}" style="font-size:14px"/>
                        </div>
                        <hbox>
                            <checkbox checked="@{userLoginController.userLogin.accountLocked}" label="Account Locked" />
                            <checkbox checked="@{userLoginController.userLogin.accountExpired}" label="Account Expired" />
                            <checkbox checked="@{userLoginController.userLogin.credentialsExpired}"
                                      label="Credentials Expired" />
                            <checkbox checked="@{userLoginController.userLogin.requirePasswordChange}"
                                      label="Required Password Change" />
                        </hbox>
                        <div style="margin-left:10px">
                            <label value="Successive Failed Logins"></label>
                            <spinner value="@{userLoginController.userLogin.successiveFailedLogins}" cols="1"
                                     style="height:30px" />
                        </div>
                    </div>
                </panelchildren>
            </panel>
            <div style="boxStyle">
                <n:fieldset style="width:100%;border:1px solid #DDDDDD;">
                    <n:legend>
                        <span zclass="subHeading" style="padding:2px;">Select Required Details</span>
                    </n:legend>
                    <h:table style="width:99%">
                        <h:tr style="width:100%;background:#F3F3F3;border:1px solid #DDDDDD;">
                            <h:td width="20%">
                                <label value="User Roles" zclass="labelReqNopad" />
                                <n:strong class="labelReq" style="padding:4px;">*</n:strong>
                                <n:strong>:</n:strong>
                            </h:td>
                            <h:td width="80%">
                                <div>
                                    <checkbox label=" Admin" checked="@{userLoginController.rolesVo.admin}"
                                              style="padding:6px;" id="adminCheckBox">
                                        <attribute name="onCheck">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.ADMIN);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                        <attribute name="onCreate">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.ADMIN);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                    </checkbox>
                                    <checkbox id="providerCheckBox" label=" Doctor"
                                              checked="@{userLoginController.rolesVo.provider}" disabled="true" style="padding:6px;" visible="${!isJoinINPack}">
                                        <attribute name="onCheck">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.PROVIDER);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                        <attribute name="onCreate">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.PROVIDER);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                    </checkbox>
                                    <checkbox label=" Nurse" checked="@{userLoginController.rolesVo.nurse}"
                                              style="padding:6px;" id="nurseCheckBox" visible="${!isJoinINPack}">
                                        <attribute name="onCheck">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.NURSE);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                        <attribute name="onCreate">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.NURSE);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                    </checkbox>
                                    <!--<checkbox label=" Technician" checked="@{RoleDtosVo.technician}"
                                        style="padding:6px;" />-->
                                    <checkbox label=" Reception" checked="@{userLoginController.rolesVo.reception}"
                                              style="padding:6px;" id="receptionCheckBox" >
                                        <attribute name="onCheck">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.RECEPTION);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                        <attribute name="onCreate">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.RECEPTION);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                    </checkbox>
                                    <checkbox label=" Invoice" checked="@{userLoginController.rolesVo.billing}"
                                              style="padding:6px;" id="billingCheckBox">
                                        <attribute name="onCheck">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.BILLING);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                            ]]>
                                        </attribute>
                                        <attribute name="onCreate">
                                            <![CDATA[
                                                RoleDto role = new RoleDto(self.getLabel().trim(), Roles.BILLING);
                                                userLoginController.addOrRoles(role, self.isChecked());
                                                Events.postEvent("onForceCreate", defaultRole, null);
                                            ]]>
                                        </attribute>
                                    </checkbox>
                                </div>
                            </h:td>
                        </h:tr>
                        <h:tr style="width:100%;background:#F3F3F3;border:1px solid #DDDDDD;">
                            <h:td width="20%">
                                <label value="Default Role" zclass="labelReqNopad" />
                                <n:strong class="labelReq" style="padding:6px;"></n:strong>
                                <n:strong>:</n:strong>
                            </h:td>
                            <h:td width="80%">
                                <div width="100%">
                                    <combobox model="@{userLoginController.roles, load-after='adminCheckBox.onCheck, billingCheckBox.onCheck, receptionCheckBox.onCheck, providerCheckBox.onCheck, nurseCheckBox.onCheck'}"
                                              id="defaultRole"
                                              w:showError_="function(mesg){displayError(this,mesg);}" w:clearErrorMessage="function(revalidate, remainError){clearErrorMessage(remainError,this);}">
                                        <attribute name="onForceCreate">
                                            <![CDATA[
                                            List comboItems = self.getItems();
                                            for(Comboitem c : comboItems){
                                                if(c.getValue().equals(userLoginController.getUserLogin().getSelectedDefaultRole())){
                                                    self.setSelectedItem(c);
                                                 }
                                            }
                                            ]]>
                                        </attribute>
                                        <attribute name="onSelect">
                                            if(self.getSelectedItem().getValue() != null)
                                            userLoginController.getUserLogin().setSelectedDefaultRole(self.getSelectedItem().getValue());
                                        </attribute>
                                        <attribute name="onBlur">
                                            <![CDATA[
                                                checkIdDefaultRoleSelected();
                                            ]]>
                                        </attribute>
                                        <comboitem self="@{each='role'}" label="@{role.roleName}" value="@{role.roleValue}">
                                        </comboitem>
                                    </combobox>
                                </div>
                            </h:td>
                        </h:tr>
                        <h:tr style="width:100%">
                            <h:td width="15%"></h:td>
                        </h:tr>
                        <h:tr style="width:100%">
                            <h:td width="15%"></h:td>
                        </h:tr>
                        <!-- <h:tr style="width:100%;background:#F3F3F3;border:1px solid #DDDDDD;">
                            <h:td width="20%">
                                <label value="Location" zclass="labelReqNopad" />
                                <n:strong class="labelReq" style="padding:4px;">*</n:strong>
                                <n:strong>:</n:strong>
                            </h:td>
                            <h:td width="80%">
                                <div forEach="${allLocations}">
                                    <listbox visible="false">
                                        <listitem value="${each}" selected="true" />
                                    </listbox>
                                    <checkbox value="${each}" label="${each.name}" style="padding:6px;"
                                              onCreate="self.setChecked(userLoginController.getLocations().contains(((Listbox)self.getPreviousSibling()).getSelectedItem().getValue()))">
                                        <attribute name="onCheck">
                                            userLoginController.addOrRemoveLocation(((Listbox) self.getPreviousSibling()).getSelectedItem().getValue(), event.isChecked());
                                            org.hibernate.SessionFactory sf = com.nzion.util.Infrastructure.getSpringBean("sessionFactory");
                                            org.hibernate.Session session = org.springframework.orm.hibernate3.SessionFactoryUtils.getSession(sf, true);
                                            session.disableFilter("LocationFilter");
                                        </attribute>
                                    </checkbox>
                                </div>
                            </h:td>
                        </h:tr> -->
                        <h:tr style="width:100%">
                            <h:td width="15%"></h:td>
                        </h:tr>
                    </h:table>
                </n:fieldset>
            </div>
            <div sclass="panelFoot buttonPanel" >
                <button label="Save" zclass="btn-success btn" id="saveUserLogin">
                    <attribute name="onClick">
                        <![CDATA[
                        if(checkIdDefaultRoleSelected()){
                            userLoginController.save();
                        }
                        ]]>
                    </attribute>
                </button>
                <button label="Cancel" sclass="cancelBtn">
                    <attribute name="onClick">
                        <![CDATA[
                            com.nzion.zkoss.ext.Navigation.navigate("userLogin", null, "contentArea");
                           //Executions.sendRedirect(null);
                        ]]>
                    </attribute>
                </button>
            </div>
        </div>
        <zscript>
            <![CDATA[
	void enableDisableProviderRole(com.nzion.domain.Person person) {
	providerCheckBox.setDisabled(!(person instanceof com.nzion.domain.Provider && !((com.nzion.domain.Provider) person)
			.isProviderAssistant()));
	}
if (userLoginController.getUserLogin().getId() != null)
	enableDisableProviderRole(userLoginController.getUserLogin().getPerson());
]]>
        </zscript>
        <zscript>
            <![CDATA[
            boolean checkIdDefaultRoleSelected(){
                if(defaultRole.getItems().size() > 1 && UtilValidator.isEmpty(defaultRole.getSelectedItem())){
                    throw new WrongValueException(defaultRole, "Multiple role selected, please specify the default role");
                }
                return Boolean.TRUE;
            }
            ]]>
        </zscript>
    </window>
</zk>